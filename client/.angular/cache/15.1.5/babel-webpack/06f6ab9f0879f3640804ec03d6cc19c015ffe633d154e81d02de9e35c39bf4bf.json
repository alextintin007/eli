{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/clientes.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class ClienteFormComponent {\n  constructor(clienteService, router, activatedRoute) {\n    this.clienteService = clienteService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.classes = 'row';\n    this.cliente = {\n      id: 0,\n      nombre: \"\",\n      tipoCuenta: \"\",\n      monto: 0\n    };\n    this.edit = false;\n  }\n  ngOnInit() {\n    const params = this.activatedRoute.snapshot.params;\n    if (params['id']) {\n      this.clienteService.getCliente(params['id']).subscribe(res => {\n        console.log(res);\n        this.cliente = res;\n        this.edit = true;\n      }, err => console.error(err));\n    }\n  }\n  saveNewClient() {\n    delete this.cliente.id;\n    this.clienteService.saveCliente(this.cliente).subscribe(res => {\n      console.log(res);\n      this.router.navigate(['/clientes']);\n    }, err => console.error(err));\n  }\n  updateCliente() {\n    delete this.cliente.tipoCuenta;\n    this.clienteService.updateCliente(this.cliente.id, this.cliente).subscribe(res => {\n      console.log(res);\n    });\n  }\n}\nClienteFormComponent.ɵfac = function ClienteFormComponent_Factory(t) {\n  return new (t || ClienteFormComponent)(i0.ɵɵdirectiveInject(i1.ClientesService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nClienteFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClienteFormComponent,\n  selectors: [[\"app-cliente-form\"]],\n  hostVars: 2,\n  hostBindings: function ClienteFormComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.classes);\n    }\n  },\n  decls: 12,\n  vars: 3,\n  consts: [[1, \"col-md-5\", \"offset-md-4\"], [1, \"card\"], [1, \"card-body\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"nombre\", \"placeholder\", \"Nombre\", \"autofocus\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"tipoCuenta\", \"placeholder\", \"Tipo de Cuenta\", \"autofocus\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"monto\", \"placeholder\", \"Monto\", \"autofocus\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-success\", \"btn-block\", 3, \"click\"]],\n  template: function ClienteFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\")(4, \"div\", 3)(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function ClienteFormComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.cliente.nombre = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 3)(7, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function ClienteFormComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.cliente.tipoCuenta = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function ClienteFormComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.cliente.monto = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function ClienteFormComponent_Template_button_click_10_listener() {\n        return ctx.edit ? ctx.updateCliente() : ctx.saveNewClient();\n      });\n      i0.ɵɵtext(11, \" Save \");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.nombre);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.tipoCuenta);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.monto);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,oBAAoB;EAY/BC,YAAoBC,cAA+B,EAAUC,MAAc,EAAUC,cAA8B;IAA/F,mBAAc,GAAdF,cAAc;IAA2B,WAAM,GAANC,MAAM;IAAkB,mBAAc,GAAdC,cAAc;IAX7E,YAAO,GAAG,KAAK;IAErC,YAAO,GAAY;MACjBC,EAAE,EAAE,CAAC;MACLC,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE;KACR;IAED,SAAI,GAAW,KAAK;EAGpB;EAEAC,QAAQ;IACN,MAAMC,MAAM,GAAG,IAAI,CAACN,cAAc,CAACO,QAAQ,CAACD,MAAM;IAClD,IAAIA,MAAM,CAAC,IAAI,CAAC,EAAC;MACf,IAAI,CAACR,cAAc,CAACU,UAAU,CAACF,MAAM,CAAC,IAAI,CAAC,CAAC,CACzCG,SAAS,CACRC,GAAG,IAAG;QACJC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAI,CAACG,OAAO,GAAGH,GAAG;QAClB,IAAI,CAACI,IAAI,GAAG,IAAI;MAClB,CAAC,EACDC,GAAG,IAAIJ,OAAO,CAACK,KAAK,CAACD,GAAG,CAAC,CAC1B;;EAEP;EAEAE,aAAa;IACX,OAAO,IAAI,CAACJ,OAAO,CAACZ,EAAE;IAEtB,IAAI,CAACH,cAAc,CAACoB,WAAW,CAAC,IAAI,CAACL,OAAO,CAAC,CAC1CJ,SAAS,CACRC,GAAG,IAAG;MACJC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACX,MAAM,CAACoB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC,EACDJ,GAAG,IAAIJ,OAAO,CAACK,KAAK,CAACD,GAAG,CAAC,CAC1B;EACL;EAEAK,aAAa;IACX,OAAO,IAAI,CAACP,OAAO,CAACV,UAAU;IAC9B,IAAI,CAACL,cAAc,CAACsB,aAAa,CAAC,IAAI,CAACP,OAAO,CAACZ,EAAE,EAAE,IAAI,CAACY,OAAO,CAAC,CAC7DJ,SAAS,CACRC,GAAG,IAAG;MACJC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CACF;EACL;;AAnDWd,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAyB;EAAAC;EAAAC;IAAA;;;;;;;;;MCXjCC,8BAAkC;MAKmBA;QAAA;MAAA,EAA4B;MAA7DA,iBAAkH;MAEtHA,8BAAwB;MACiBA;QAAA;MAAA,EAAgC;MAArEA,iBAAkI;MAEtIA,8BAAwB;MACYA;QAAA;MAAA,EAA2B;MAA3DA,iBAA+G;MAEnHA,kCAA6F;MAAnDA;QAAA,kBAAgBC,mBAAe,GAAGA,mBAAe;MAAA,EAAC;MACxFD,uBACJ;MAAAA,iBAAS;;;MAV4BA,eAA4B;MAA5BA,4CAA4B;MAGxBA,eAAgC;MAAhCA,gDAAgC;MAGrCA,eAA2B;MAA3BA,2CAA2B","names":["ClienteFormComponent","constructor","clienteService","router","activatedRoute","id","nombre","tipoCuenta","monto","ngOnInit","params","snapshot","getCliente","subscribe","res","console","log","cliente","edit","err","error","saveNewClient","saveCliente","navigate","updateCliente","selectors","hostVars","hostBindings","i0","ctx"],"sourceRoot":"","sources":["/Users/alextintin/Library/CloudStorage/OneDrive-EscuelaPolitécnicaNacional/EPN/6-Semester/Proyecto Final/Code/BancoMundo/Mark 3/BancoMundo/client/src/app/components/cliente-form/cliente-form.component.ts","/Users/alextintin/Library/CloudStorage/OneDrive-EscuelaPolitécnicaNacional/EPN/6-Semester/Proyecto Final/Code/BancoMundo/Mark 3/BancoMundo/client/src/app/components/cliente-form/cliente-form.component.html"],"sourcesContent":["import { Component, HostBinding, OnInit } from '@angular/core';\nimport { Cliente } from 'src/app/models/Cliente'\nimport { Router, ActivatedRoute } from '@angular/router'\n\nimport { ClientesService } from '../../services/clientes.service'\n\n@Component({\n  selector: 'app-cliente-form',\n  templateUrl: './cliente-form.component.html',\n  styleUrls: ['./cliente-form.component.css']\n})\nexport class ClienteFormComponent implements OnInit {\n  @HostBinding('class') classes = 'row';\n\n  cliente: Cliente = {\n    id: 0,\n    nombre: \"\",\n    tipoCuenta: \"\",\n    monto: 0\n  };\n\n  edit:boolean = false;\n\n  constructor(private clienteService: ClientesService, private router: Router, private activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    const params = this.activatedRoute.snapshot.params;\n    if (params['id']){\n      this.clienteService.getCliente(params['id'])\n        .subscribe(\n          res => {\n            console.log(res);\n            this.cliente = res;\n            this.edit = true;\n          },\n          err => console.error(err)\n        )\n    }\n  }\n\n  saveNewClient() {\n    delete this.cliente.id;\n\n    this.clienteService.saveCliente(this.cliente)\n      .subscribe(\n        res => {\n          console.log(res);\n          this.router.navigate(['/clientes'])\n        },\n        err => console.error(err)\n      )\n  }\n\n  updateCliente(){\n    delete this.cliente.tipoCuenta;\n    this.clienteService.updateCliente(this.cliente.id, this.cliente)\n      .subscribe(\n        res => {\n          console.log(res)\n        }\n      )\n  }\n}\n","<div class=\"col-md-5 offset-md-4\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <form>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"nombre\" [(ngModel)]=\"cliente.nombre\" placeholder=\"Nombre\" class=\"form-control\" autofocus>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"tipoCuenta\" [(ngModel)]=\"cliente.tipoCuenta\" placeholder=\"Tipo de Cuenta\" class=\"form-control\" autofocus>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"monto\" [(ngModel)]=\"cliente.monto\" placeholder=\"Monto\" class=\"form-control\" autofocus>\n                </div>\n                <button class=\"btn btn-success btn-block\" (click)=\"edit ? updateCliente() : saveNewClient()\">\n                    Save\n                </button>\n            </form>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}